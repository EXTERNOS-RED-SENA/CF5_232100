{"remainingRequest":"/home/runner/work/CF5_232100/CF5_232100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF5_232100/CF5_232100/src/views/Tema6.vue?vue&type=template&id=244e1c26&lang=pug","dependencies":[{"path":"/home/runner/work/CF5_232100/CF5_232100/src/views/Tema6.vue","mtime":1734306896331},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5wYi0zCiAgQmFubmVySW50ZXJubwogIC5jb250YWluZXIudGFyamV0YS50YXJqZXRhLS1ibGFuY2EucC00LnAtbWQtNS5tYi01CiAgICAudGl0dWxvLXByaW5jaXBhbC5jb2xvci1hY2VudG8tY29udGVuaWRvCiAgICAgIC50aXR1bG8tcHJpbmNpcGFsX19udW1lcm8KICAgICAgICBzcGFuIDYKICAgICAgaDEgSW1wbGVtZW50YWNpw7NuIFByw6FjdGljYSBkZSB1biBTaXN0ZW1hIElvVCBCw6FzaWNvCgogICAgICAgIAogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTQgICAKICAgICAgLmNvbC1sZy00Lm15LWxnLTAubXktMwogICAgICAgIHAubWItMCBMYSBpbXBsZW1lbnRhY2nDs24gZGUgdW4gc2lzdGVtYSBJb1QgYsOhc2ljbyBwZXJtaXRlIGEgbG9zIGVzdHVkaWFudGVzIHkgcHJvZmVzaW9uYWxlcyBmYW1pbGlhcml6YXJzZSBjb24gbG9zIGNvbXBvbmVudGVzIGZ1bmRhbWVudGFsZXMgZGUgSW9UIHkgY29tcHJlbmRlciBjw7NtbyBlc3RvcyBpbnRlcmFjdMO6YW4gcGFyYSBjcmVhciBzb2x1Y2lvbmVzIGRlIG1vbml0b3JlbyB5IGNvbnRyb2wgZW4gdGllbXBvIHJlYWwuIEVuIGVzdGUgY2Fww610dWxvLCBzZSBndcOtYSBhbCBsZWN0b3IgZW4gZWwgZGlzZcOxbyB5IGNvbmZpZ3VyYWNpw7NuIGRlIHVuIHNpc3RlbWEgYsOhc2ljbyBkZSBJb1QgcGFyYSBtb25pdG9yZWFyIHZhcmlhYmxlcyBhbWJpZW50YWxlcywgY29tbyBsYSB0ZW1wZXJhdHVyYSB5IGxhIGh1bWVkYWQsIGEgdHJhdsOpcyBkZSBzZW5zb3JlcyBjb25lY3RhZG9zIGEgdW5hIHBsYXRhZm9ybWEgZW4gbGEgbnViZS4KCiAgICAgIC5jb2wtbGctNC5teS1sZy0wLm15LTMuajEKICAgICAgICBpbWcuaW1nLWEuaW1nLXQoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy83Ni5wbmcnIGFsdD0nJykgICAKCiAgICAgIC5jb2wtbGctNC5teS1sZy0wLm15LTMKICAgICAgICAuYmdzLnAtMy5icmFkLmgtMTAwLmoxCiAgICAgICAgICBwLm1iLTAgRWwgc2lzdGVtYSBJb1QgYsOhc2ljbyBpbmNsdXllIGxvcyBjb21wb25lbnRlcyBlc2VuY2lhbGVzIGRlIGN1YWxxdWllciBzb2x1Y2nDs24gSW9UOiBzZW5zb3JlcywgY29uZWN0aXZpZGFkIGRlIHJlZCwgdW5hIHBsYXRhZm9ybWEgZW4gbGEgbnViZSBwYXJhIGFsbWFjZW5hbWllbnRvIHkgdmlzdWFsaXphY2nDs24gZGUgZGF0b3MsIHkgdW5hIGludGVyZmF6IHBhcmEgbGEgY29uZmlndXJhY2nDs24gZGUgYWxlcnRhcyB5IG5vdGlmaWNhY2lvbmVzLiBFc3RlIGNhcMOtdHVsbyBkZXRhbGxhIGNhZGEgcGFzbyBkZSBsYSBpbXBsZW1lbnRhY2nDs24sIGRlc2RlIGxhIHNlbGVjY2nDs24gZGUgc2Vuc29yZXMgeSBtaWNyb2NvbnRyb2xhZG9yZXMgaGFzdGEgbGEgdmlzdWFsaXphY2nDs24gZGUgbG9zIGRhdG9zIGVuIGxhIG51YmUsIHkgcHJvcG9yY2lvbmEgdW5hIGJhc2UgcHLDoWN0aWNhIHBhcmEgcmVhbGl6YXIgcHJveWVjdG9zIG3DoXMgY29tcGxlam9zLgoKICAgIFNlcGFyYWRvciAKICAgICN0XzZfMS50aXR1bG8tc2VndW5kby5jb2xvci1hY2VudG8tY29udGVuaWRvKGRhdGEtYW9zPSJ6b29tLWluLWxlZnQiKQogICAgICBoMiA2LjEJIE1hdGVyaWFsZXMgeSBjb21wb25lbnRlcyBuZWNlc2FyaW9zCiAgICAucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIubWItNAogICAgICAuY29sLWxnLTcubXktbGctMC5teS0zCiAgICAgICAgcCBQYXJhIGltcGxlbWVudGFyIHVuIHNpc3RlbWEgSW9UIGLDoXNpY28sIHNlIG5lY2VzaXRhbiBsb3Mgc2lndWllbnRlcyBjb21wb25lbnRlczoKICAgICAgICBBY2NvcmRpb25SRUQodGlwbz0iYSIgY2xhc2UtdGFyamV0YT0idGFyamV0YSBiZzciKQogICAgICAgICAgZGl2KHRpdHVsbz0iU2Vuc29yIGRlIHRlbXBlcmF0dXJhIHkgaHVtZWRhZCIpIFVuIHNlbnNvciBjb23Dum4gcGFyYSBlc3RlIHRpcG8gZGUgcHJveWVjdG9zIGVzIGVsIERIVDExIG8gREhUMjIsIHF1ZSBtaWRlIHRhbnRvIGxhIHRlbXBlcmF0dXJhIGNvbW8gbGEgaHVtZWRhZCBhbWJpZW50YWwuCiAgICAgICAgICBkaXYodGl0dWxvPSJNaWNyb2NvbnRyb2xhZG9yIG8gcGxhY2EgZGUgZGVzYXJyb2xsbyIpIExhIHBsYWNhIEVTUDMyIG8gRVNQODI2NiBlcyBpZGVhbCBwYXJhIHByb3llY3RvcyBJb1QgYsOhc2ljb3MgZGViaWRvIGEgc3UgY2FwYWNpZGFkIGRlIGNvbmV4acOzbiBXaS1GaSBpbnRlZ3JhZGEgeSBzdSBjb21wYXRpYmlsaWRhZCBjb24gbcO6bHRpcGxlcyBwbGF0YWZvcm1hcyBlbiBsYSBudWJlLgogICAgICAgICAgZGl2KHRpdHVsbz0iUGxhdGFmb3JtYSBlbiBsYSBudWJlIikgVGhpbmdTcGVhayBlcyB1bmEgb3BjacOzbiByZWNvbWVuZGFkYSBwYXJhIHByb3llY3RvcyBwZXF1ZcOxb3MsIHlhIHF1ZSBwZXJtaXRlIGxhIHZpc3VhbGl6YWNpw7NuIHkgYWxtYWNlbmFtaWVudG8gZGUgZGF0b3MgZW4gdGllbXBvIHJlYWwgc2luIGNvc3RvLgogICAgICAgICAgZGl2KHRpdHVsbz0iPGk+U29mdHdhcmU8L2k+IGRlIHByb2dyYW1hY2nDs24iKSBBcmR1aW5vIElERSBwYXJhIHByb2dyYW1hciBlbCBtaWNyb2NvbnRyb2xhZG9yLgogICAgICAgICAgZGl2KHRpdHVsbz0iQ29uZXhpw7NuIGEgaW50ZXJuZXQiKSBQYXJhIGNvbmVjdGFyIGVsIG1pY3JvY29udHJvbGFkb3IgYSBsYSBwbGF0YWZvcm1hIGVuIGxhIG51YmUgeSB0cmFuc21pdGlyIGxvcyBkYXRvcy4KICAgICAgLmNvbC1sZy01Lm15LWxnLTAubXktMwogICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzc3LnBuZycgYWx0PScnKSAgICAKCiAgICBwIEVzdG9zIG1hdGVyaWFsZXMgb2ZyZWNlbiB1bmEgY29uZmlndXJhY2nDs24gZWNvbsOzbWljYSB5IGFjY2VzaWJsZSwgcGVybWl0aWVuZG8gYSBsb3MgZXN0dWRpYW50ZXMgZXhwZXJpbWVudGFyIGNvbiBsYSByZWNvcGlsYWNpw7NuIHkgdmlzdWFsaXphY2nDs24gZGUgZGF0b3Mgc2luIG5lY2VzaWRhZCBkZSBpbmZyYWVzdHJ1Y3R1cmEgY29zdG9zYS4gCgogICAgU2VwYXJhZG9yIAogICAgI3RfNl8yLnRpdHVsby1zZWd1bmRvLmNvbG9yLWFjZW50by1jb250ZW5pZG8oZGF0YS1hb3M9Inpvb20taW4tbGVmdCIpCiAgICAgIGgyIDYuMglDb25maWd1cmFjacOzbiBkZSAjW2kgaGFyZHdhcmVdIHkgI1tpIHNvZnR3YXJlXSAKCiAgICBwIEVsIHByaW1lciBwYXNvIHBhcmEgaW1wbGVtZW50YXIgZWwgc2lzdGVtYSBJb1QgZXMgY29uZmlndXJhciBlbCBIYXJkd2FyZSB5IGNvbmVjdGFyIGxvcyBjb21wb25lbnRlcy4gQSBjb250aW51YWNpw7NuLCBzZSBkZXNjcmliZSBlbCBwcm9jZXNvIGRlIGNvbmZpZ3VyYWNpw7NuOiAgICAgIAogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLnRleHQtY2VudGVyLm1iLTQKICAgICAgLmNvbC1sZy00Lm15LTMKICAgICAgICAuYmd3LnNoYS5icmFkLmgtMTAwLnAtNAogICAgICAgICAgaW1nLmltZy1hLmltZy10Lm1iLTQoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8yMC5wbmcnIGFsdD0nJykgICAgICAgICAgICAgICAgIAogICAgICAgICAgaDUgQ29uZWN0YXIgZWwgc2Vuc29yIGFsIG1pY3JvY29udHJvbGFkb3IKICAgICAgICAgIHAubWItMCBDb25lY3RhIGVsIHNlbnNvciBESFQxMSBvIERIVDIyIGFsIG1pY3JvY29udHJvbGFkb3IgRVNQMzIgbyBFU1A4MjY2LiBFbiBnZW5lcmFsLCBlbCBzZW5zb3IgdGllbmUgdHJlcyBwaW5lczogYWxpbWVudGFjacOzbiAoVkNDKSwgdGllcnJhIChHTkQpIHkgc2FsaWRhIGRlIGRhdG9zIChEQVRBKS4gRWwgcGluIGRlIGRhdG9zIHNlIGNvbmVjdGEgYSB1bm8gZGUgbG9zIHBpbmVzIEdQSU8gZGVsIG1pY3JvY29udHJvbGFkb3IgcGFyYSBsZWVyIGxvcyBkYXRvcyBkZSB0ZW1wZXJhdHVyYSB5IGh1bWVkYWQuCgogICAgICAuY29sLWxnLTQubXktMwogICAgICAgIC5iZ3cuc2hhLmJyYWQuaC0xMDAucC00CiAgICAgICAgICBpbWcuaW1nLWEuaW1nLXQubWItNChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzIxLnBuZycgYWx0PScnKSAgICAgICAgICAgICAgICAgCiAgICAgICAgICBoNSBDb25maWd1cmFyIGVsIG1pY3JvY29udHJvbGFkb3IKICAgICAgICAgIHAubWItMCBVbmEgdmV6IHF1ZSBlbCBzZW5zb3IgZXN0w6kgY29uZWN0YWRvLCBjb25maWd1cmEgZWwgbWljcm9jb250cm9sYWRvciBwYXJhIGxlZXIgbG9zIGRhdG9zIGRlbCBzZW5zb3IgeSBwcmVwYXJhcmxvcyBwYXJhIHN1IHRyYW5zbWlzacOzbiBhIGxhIG51YmUuIFBhcmEgZWxsbywgZXMgbmVjZXNhcmlvIHByb2dyYW1hciBlbCBtaWNyb2NvbnRyb2xhZG9yIHV0aWxpemFuZG8gZWwgU29mdHdhcmUgQXJkdWlubyBJREUsIHF1ZSBpbmNsdXllIGJpYmxpb3RlY2FzIHBhcmEgZWwgc2Vuc29yIERIVCB5IHBhcmEgY29uZWN0YXJzZSBhIHBsYXRhZm9ybWFzIGVuIGxhIG51YmUuCgogICAgICAuY29sLWxnLTQubXktMwogICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzc4LnBuZycgYWx0PScnKSAKCiAgICBTZXBhcmFkb3IgCiAgICAjdF82XzMudGl0dWxvLXNlZ3VuZG8uY29sb3ItYWNlbnRvLWNvbnRlbmlkbyhkYXRhLWFvcz0iem9vbS1pbi1sZWZ0IikKICAgICAgaDIgNi4zCVByb2dyYW1hY2nDs24gZGVsIG1pY3JvY29udHJvbGFkb3IgeSBlbnbDrW8gZGUgZGF0b3MgICAgICAgICAgICAgICAKICAgIHAgVW5hIHZleiBjb25maWd1cmFkbyBlbCBIYXJkd2FyZSwgZWwgc2lndWllbnRlIHBhc28gZXMgcHJvZ3JhbWFyIGVsIG1pY3JvY29udHJvbGFkb3IgcGFyYSBxdWUgbGVhIGxvcyBkYXRvcyBkZWwgc2Vuc29yIHkgbG9zIGVudsOtZSBhIGxhIHBsYXRhZm9ybWEgZW4gbGEgbnViZS4gQSBjb250aW51YWNpw7NuIHNlIGRldGFsbGFuIGxvcyBwYXNvcyBjbGF2ZToKCiAgICBUYWJzQy5jb2xvci1hY2VudG8tY29udGVuaWRvLm1iLTUKICAgICAgLnB5LTMucHktbWQtNC5iZzExKHRpdHVsbz0iRXNjcmliaXIgZWwgY8OzZGlnbyIpCiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLnB5LTQKICAgICAgICAgIC5jb2wtbGctNC5teS1sZy0wLm15LTMKICAgICAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvNDUucG5nJyBhbHQ9JycpICAKICAgICAgICAgIC5jb2wtbGctNy5teS1sZy0wLm15LTMKICAgICAgICAgICAgaDUgRXNjcmliaXIgZWwgY8OzZGlnbwogICAgICAgICAgICBwIFV0aWxpemEgQXJkdWlubyBJREUgcGFyYSBlc2NyaWJpciBlbCBjw7NkaWdvIHF1ZSBwZXJtaXRlIGFsIG1pY3JvY29udHJvbGFkb3IgY29uZWN0YXJzZSBhIGxhIHJlZCBXaS1GaSB5IGVudmlhciBsb3MgZGF0b3MgYSBUaGluZ1NwZWFrLiBBc2Vnw7pyYXRlIGRlIGluY2x1aXIgbGFzIGJpYmxpb3RlY2FzIG5lY2VzYXJpYXMsIGNvbW8gbGEgYmlibGlvdGVjYSBwYXJhIGVsIHNlbnNvciBESFQgeSBsYSBiaWJsaW90ZWNhIFdpRmksIHBhcmEgZmFjaWxpdGFyIGxhIGNvbmVjdGl2aWRhZCB5IGxhIGxlY3R1cmEgZGUgZGF0b3MuCgogICAgICAucHktMy5weS1tZC00LmJnMTEodGl0dWxvPSJTdWJpciBlbCBjw7NkaWdvIGFsIG1pY3JvY29udHJvbGFkb3IiKQogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5weS00CiAgICAgICAgICAuY29sLWxnLTQubXktbGctMC5teS0zCiAgICAgICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzQ1LnBuZycgYWx0PScnKSAgCiAgICAgICAgICAuY29sLWxnLTcubXktbGctMC5teS0zCiAgICAgICAgICAgIGg1IFN1YmlyIGVsIGPDs2RpZ28gYWwgbWljcm9jb250cm9sYWRvcgogICAgICAgICAgICBwIENvbmVjdGEgZWwgbWljcm9jb250cm9sYWRvciBhbCBvcmRlbmFkb3IgeSBzdWJlIGVsIGPDs2RpZ28gdXRpbGl6YW5kbyBBcmR1aW5vIElERS4gVW5hIHZleiBjYXJnYWRvLCBlbCBtaWNyb2NvbnRyb2xhZG9yIGNvbWVuemFyw6EgYSBsZWVyIGxvcyBkYXRvcyBkZWwgc2Vuc29yIHkgYSBlbnZpYXJsb3MgYSBsYSBwbGF0YWZvcm1hIFRoaW5nU3BlYWsuCgogICAgICAucHktMy5weS1tZC00LmJnMTEodGl0dWxvPSJDb25maWd1cmFyIFRoaW5nU3BlYWsgcGFyYSByZWNpYmlyIGxvcyBkYXRvcyIpCiAgICAgICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLnB5LTQKICAgICAgICAgIC5jb2wtbGctNC5teS1sZy0wLm15LTMKICAgICAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvNDUucG5nJyBhbHQ9JycpICAKICAgICAgICAgIC5jb2wtbGctNy5teS1sZy0wLm15LTMKICAgICAgICAgICAgaDUgQ29uZmlndXJhciBUaGluZ1NwZWFrIHBhcmEgcmVjaWJpciBsb3MgZGF0b3MKICAgICAgICAgICAgcCBDcmVhIHVuYSBjdWVudGEgZW4gVGhpbmdTcGVhayB5IGNvbmZpZ3VyYSB1biBjYW5hbCBwYXJhIHJlY2liaXIgbG9zIGRhdG9zIGRlbCBtaWNyb2NvbnRyb2xhZG9yLiBDYWRhIGNhbmFsIGVuIFRoaW5nU3BlYWsgdGllbmUgY2FtcG9zIHBhcmEgZGlmZXJlbnRlcyB0aXBvcyBkZSBkYXRvcywgZW4gZXN0ZSBjYXNvLCB1bm8gcGFyYSBsYSB0ZW1wZXJhdHVyYSB5IG90cm8gcGFyYSBsYSBodW1lZGFkLiBUaGluZ1NwZWFrIGdlbmVyYSB1bmEgY2xhdmUgZGUgQVBJIHF1ZSBzZSBkZWJlIGluY2x1aXIgZW4gZWwgY8OzZGlnbyBwYXJhIGF1dG9yaXphciBlbCBlbnbDrW8gZGUgZGF0b3MgZGVzZGUgZWwgbWljcm9jb250cm9sYWRvci4KCiAgICBwIEVzdGUgcGFzbyBwZXJtaXRlIGVzdGFibGVjZXIgdW5hIGNvbmV4acOzbiBlbnRyZSBlbCBtaWNyb2NvbnRyb2xhZG9yIHkgbGEgcGxhdGFmb3JtYSBlbiBsYSBudWJlLCBhc2VndXJhbmRvIHF1ZSBsb3MgZGF0b3Mgc2UgZW52w61lbiBjb3JyZWN0YW1lbnRlIHkgcXVlIHB1ZWRhbiB2aXN1YWxpemFyc2UgZW4gdGllbXBvIHJlYWwuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICBTZXBhcmFkb3IgCiAgICAjdF82XzQudGl0dWxvLXNlZ3VuZG8uY29sb3ItYWNlbnRvLWNvbnRlbmlkbyhkYXRhLWFvcz0iem9vbS1pbi1sZWZ0IikKICAgICAgaDIgNi40CVZpc3VhbGl6YWNpw7NuIHkgYW7DoWxpc2lzIGRlIGxvcyBkYXRvcyBlbiBsYSBudWJlCgogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLmFsaWduLWl0ZW1zLWNlbnRlci5tYi00CiAgICAgIC5jb2wtbGctYXV0bwogICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzIwLnBuZycgYWx0PScnKQogICAgICAuY29sLnB0LWxnLTAucHQtbWQtNAogICAgICAgIHAubWItMCBEZXNwdcOpcyBkZSBjb25maWd1cmFyIGVsIG1pY3JvY29udHJvbGFkb3IgeSBsYSBwbGF0YWZvcm1hIFRoaW5nU3BlYWssIGxvcyBkYXRvcyBjb21lbnphcsOhbiBhIHZpc3VhbGl6YXJzZSBlbiB0aWVtcG8gcmVhbCBlbiBlbCBkYXNoYm9hcmQgZGUgVGhpbmdTcGVhay4gTGEgcGxhdGFmb3JtYSBwZXJtaXRlIGdlbmVyYXIgZ3LDoWZpY29zIHkgY29uZmlndXJhciBwYW5lbGVzIGRlIGNvbnRyb2wgcXVlIG11ZXN0cmFuIGxhIGV2b2x1Y2nDs24gZGUgbGEgdGVtcGVyYXR1cmEgeSBodW1lZGFkLiBFc3RvcyBwYW5lbGVzIGF5dWRhbiBhIG1vbml0b3JlYXIgbGFzIGNvbmRpY2lvbmVzIGFtYmllbnRhbGVzIGRlIG1hbmVyYSByZW1vdGEgeSBvZnJlY2VuIHVuYSBiYXNlIHBhcmEgYW5hbGl6YXIgdGVuZGVuY2lhcy4gIAogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLnRleHQtY2VudGVyLm1iLTQKICAgICAgLmNvbC1sZy00Lm15LTMKICAgICAgICAuYmd3LnNoYS5icmFkLmgtMTAwLnAtNAogICAgICAgICAgaW1nLmltZy1hLmltZy10Lm1iLTQoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8yMC5wbmcnIGFsdD0nJykgICAgICAgICAgICAgICAgIAogICAgICAgICAgaDUgQ29uZmlndXJhY2nDs24gZGUgZ3LDoWZpY29zCiAgICAgICAgICBwLm1iLTAgVGhpbmdTcGVhayBwZXJtaXRlIGNyZWFyIGdyw6FmaWNvcyBkZSBkYXRvcyBlbiB0aWVtcG8gcmVhbCBwYXJhIGNhZGEgY2FtcG8gY29uZmlndXJhZG8uIFB1ZWRlcyB2ZXIgY8OzbW8gZXZvbHVjaW9uYW4gbGEgdGVtcGVyYXR1cmEgeSBsYSBodW1lZGFkIGEgbG8gbGFyZ28gZGVsIHRpZW1wbywgbG8gcXVlIGZhY2lsaXRhIGVsIGFuw6FsaXNpcyBkZSBwYXRyb25lcyB5IHZhcmlhY2lvbmVzLgoKICAgICAgLmNvbC1sZy00Lm15LTMKICAgICAgICAuYmd3LnNoYS5icmFkLmgtMTAwLnAtNAogICAgICAgICAgaW1nLmltZy1hLmltZy10Lm1iLTQoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy8yMS5wbmcnIGFsdD0nJykgICAgICAgICAgICAgICAgIAogICAgICAgICAgaDUgQ29uZmlndXJhciBhbGVydGFzIHkgbm90aWZpY2FjaW9uZXMgCiAgICAgICAgICBwLm1iLTAgVGhpbmdTcGVhayBvZnJlY2UgbGEgcG9zaWJpbGlkYWQgZGUgZXN0YWJsZWNlciBhbGVydGFzIG1lZGlhbnRlIGFwbGljYWNpb25lcyBleHRlcm5hcywgY29tbyBNQVRMQUIgeSBzZXJ2aWNpb3MgZGUgbWVuc2FqZXLDrWEsIHBhcmEgcXVlIGVsIHNpc3RlbWEgZW52w61lIG5vdGlmaWNhY2lvbmVzIGN1YW5kbyBzZSBzdXBlcmVuIGNpZXJ0b3MgdW1icmFsZXMgZGUgdGVtcGVyYXR1cmEgbyBodW1lZGFkLgoKICAgICAgLmNvbC1sZy00Lm15LTMKICAgICAgICBpbWcuaW1nLWEuaW1nLXQoc3JjPSdAL2Fzc2V0cy9jdXJzby90ZW1hcy83OS5wbmcnIGFsdD0nJykgCgogICAgcCBMYSB2aXN1YWxpemFjacOzbiB5IGFuw6FsaXNpcyBlbiBsYSBudWJlIGJyaW5kYW4gYWwgdXN1YXJpbyBsYSBjYXBhY2lkYWQgZGUgbW9uaXRvcmVhciB2YXJpYWJsZXMgZGUgZm9ybWEgcmVtb3RhIHkgYWN0dWFyIGFudGUgY3VhbHF1aWVyIGNhbWJpbyBzaWduaWZpY2F0aXZvLiAKCiAgICBTZXBhcmFkb3IgCiAgICAjdF82XzUudGl0dWxvLXNlZ3VuZG8uY29sb3ItYWNlbnRvLWNvbnRlbmlkbyhkYXRhLWFvcz0iem9vbS1pbi1sZWZ0IikKICAgICAgaDIgNi41CUltcGxlbWVudGFjacOzbiBkZSB1biBzaXN0ZW1hIGRlIGFsZXJ0YXMgYsOhc2ljbwogICAgLnJvdy5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyLm1iLTQKICAgICAgLmNvbC1sZy03Lm15LWxnLTAubXktMwogICAgICAgIHAgVW4gc2lzdGVtYSBkZSBJb1Qgbm8gc29sbyBzZSBsaW1pdGEgYSBsYSByZWNvcGlsYWNpw7NuIHkgdmlzdWFsaXphY2nDs24gZGUgZGF0b3MsIHNpbm8gcXVlIHRhbWJpw6luIHBlcm1pdGUgZXN0YWJsZWNlciB1biBzaXN0ZW1hIGRlIGFsZXJ0YXMgcXVlIGZhY2lsaXRhIGxhIHJlc3B1ZXN0YSBhbnRlIGNvbmRpY2lvbmVzIGFub3JtYWxlcy4gRW4gZXN0ZSBzaXN0ZW1hIElvVCBiw6FzaWNvLCBzZSBwdWVkZSBjb25maWd1cmFyIHVuYSBhbGVydGEgcGFyYSBlbnZpYXIgdW5hIG5vdGlmaWNhY2nDs24gY3VhbmRvIGxvcyBuaXZlbGVzIGRlIHRlbXBlcmF0dXJhIG8gaHVtZWRhZCBzdXBlcmVuIGxvcyB2YWxvcmVzIGRlc2VhZG9zLgogICAgICAgIEFjY29yZGlvblJFRCh0aXBvPSJhIiBjbGFzZS10YXJqZXRhPSJ0YXJqZXRhIGJnNyIpCiAgICAgICAgICBkaXYodGl0dWxvPSJEZWZpbmlyIHVtYnJhbGVzIGRlIGFsZXJ0YSIpIEVuIGVsIGPDs2RpZ28gZGVsIG1pY3JvY29udHJvbGFkb3IgbyBlbiBsYSBwbGF0YWZvcm1hIFRoaW5nU3BlYWssIGVzdGFibGVjZSBsb3MgdmFsb3JlcyBkZSB0ZW1wZXJhdHVyYSB5IGh1bWVkYWQgcXVlIGRlc2VuY2FkZW5hcsOhbiB1bmEgYWxlcnRhLiBQb3IgZWplbXBsbywgc2kgbGEgdGVtcGVyYXR1cmEgZXhjZWRlIGxvcyAzMMKwQywgZWwgc2lzdGVtYSBwdWVkZSBlbnZpYXIgdW5hIG5vdGlmaWNhY2nDs24gYWwgdXN1YXJpby4KICAgICAgICAgIGRpdih0aXR1bG89IkNvbmZpZ3VyYXIgbm90aWZpY2FjaW9uZXMiKSBUaGluZ1NwZWFrIHBlcm1pdGUgaW50ZWdyYXIgYWxlcnRhcyBtZWRpYW50ZSBwbGF0YWZvcm1hcyBkZSBjb211bmljYWNpw7NuIGNvbW8gSUZUVFQgKElmIFRoaXMgVGhlbiBUaGF0KSwgcXVlIGVudsOtYW4gY29ycmVvcyBlbGVjdHLDs25pY29zIG8gbWVuc2FqZXMgZGUgdGV4dG8gY3VhbmRvIHNlIGRldGVjdGEgdW5hIGNvbmRpY2nDs24gYW5vcm1hbC4gRXN0YSBmdW5jaW9uYWxpZGFkIGVzIMO6dGlsIHBhcmEgcHJvY2Vzb3MgZW4gbG9zIHF1ZSBzZSByZXF1aWVyZSB1biBtb25pdG9yZW8gY29udGludW8geSBsYSBwb3NpYmlsaWRhZCBkZSBhY3R1YXIgYW50ZSBjYW1iaW9zIGlubWVkaWF0b3MgZW4gZWwgZW50b3Juby4KICAgICAgLmNvbC1sZy01Lm15LWxnLTAubXktMwogICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzgwLnBuZycgYWx0PScnKSAKCiAgICBwIEVsIHNpc3RlbWEgZGUgYWxlcnRhcyBtZWpvcmEgbGEgZWZpY2llbmNpYSBkZWwgbW9uaXRvcmVvLCBwZXJtaXRpZW5kbyBhIGxvcyB1c3VhcmlvcyB0b21hciBhY2Npb25lcyByw6FwaWRhcyB5IG1pbmltaXphciBlbCBpbXBhY3RvIGRlIGNvbmRpY2lvbmVzIGRlc2Zhdm9yYWJsZXMgZW4gZWwgc2lzdGVtYS4gIAoKICAgIFNlcGFyYWRvciAKICAgICN0XzZfNi50aXR1bG8tc2VndW5kby5jb2xvci1hY2VudG8tY29udGVuaWRvKGRhdGEtYW9zPSJ6b29tLWluLWxlZnQiKQogICAgICBoMiA2LjYJRXZhbHVhY2nDs24gZGVsIHNpc3RlbWEgSW9UIHkgbWVqb3JlcyBwcsOhY3RpY2FzCiAgICAgICAgICAgICAgICAKICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi00LmJncy5wLTQKICAgICAgLmNvbC1sZy0zLm15LWxnLTAubXktMwogICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9J0AvYXNzZXRzL2N1cnNvL3RlbWFzLzgxLnBuZycgYWx0PScnKSAgICAgICAgCiAgICAgIC5jb2wtbGctOS5teS1sZy0wLm15LTMKICAgICAgICBwIERlc3B1w6lzIGRlIGxhIGltcGxlbWVudGFjacOzbiwgZXMgZnVuZGFtZW50YWwgZXZhbHVhciBlbCByZW5kaW1pZW50byBkZWwgc2lzdGVtYSBJb1QgeSBhcGxpY2FyIG1lam9yZXMgcHLDoWN0aWNhcyBwYXJhIGFzZWd1cmFyIHN1IGVmaWNpZW5jaWEgeSBkdXJhYmlsaWRhZDoKCiAgICAgICAgdWwubGlzdGEtdWwuZmEtdWwKICAgICAgICAgIGxpIAogICAgICAgICAgICBpLmZhcy5mYS1jaGVjay1jaXJjbGUuY29sb3IxCiAgICAgICAgICAgIHNwYW4gI1tiIE1vbml0b3JlYXIgbGEgY29uZWN0aXZpZGFkOl0gdmVyaWZpY2EgcXVlIGxhIGNvbmV4acOzbiBlbnRyZSBlbCBtaWNyb2NvbnRyb2xhZG9yIHkgbGEgcGxhdGFmb3JtYSBlbiBsYSBudWJlIHNlYSBlc3RhYmxlLiBFc3RvIHB1ZWRlIGltcGxpY2FyIGFqdXN0ZXMgZW4gbGEgY29uZmlndXJhY2nDs24gZGUgV2ktRmkgbyBlbiBsYSBwcm9ncmFtYWNpw7NuIGRlbCBtaWNyb2NvbnRyb2xhZG9yLgoKICAgICAgICAgIGxpIAogICAgICAgICAgICBpLmZhcy5mYS1jaGVjay1jaXJjbGUuY29sb3IxCiAgICAgICAgICAgIHNwYW4gI1tiIENhbGlicmFjacOzbiBkZSBzZW5zb3JlczpdIGVzIGltcG9ydGFudGUgY2FsaWJyYXIgcGVyacOzZGljYW1lbnRlIGxvcyBzZW5zb3JlcyBwYXJhIGdhcmFudGl6YXIgbGEgcHJlY2lzacOzbiBkZSBsb3MgZGF0b3MuIExhIGNhbGlicmFjacOzbiByZWd1bGFyIGFzZWd1cmEgcXVlIGxhcyBsZWN0dXJhcyBkZSB0ZW1wZXJhdHVyYSB5IGh1bWVkYWQgc2VhbiBjb25maWFibGVzIHkgcmVwcmVzZW50YXRpdmFzLgoKICAgICAgICAgIGxpIAogICAgICAgICAgICBpLmZhcy5mYS1jaGVjay1jaXJjbGUuY29sb3IxCiAgICAgICAgICAgIHNwYW4gI1tiIE9wdGltaXphciBlbCBjb25zdW1vIGRlIGVuZXJnw61hOl0gc2kgZWwgc2lzdGVtYSBJb1Qgc2UgdXRpbGl6YSBlbiB1biBlbnRvcm5vIGRvbmRlIG5vIGhheSBhY2Nlc28gY29uc3RhbnRlIGEgbGEgZW5lcmfDrWEsIHNlIHB1ZWRlbiBhcGxpY2FyIHTDqWNuaWNhcyBkZSBhaG9ycm8gZW5lcmfDqXRpY28sIGNvbW8gbGEgcmVkdWNjacOzbiBkZSBsYSBmcmVjdWVuY2lhIGRlIHRyYW5zbWlzacOzbiBkZSBkYXRvcyBvIGVsIHVzbyBkZSBtw7NkdWxvcyBkZSBiYWpvIGNvbnN1bW8uCgogICAgICAgICAgbGkgCiAgICAgICAgICAgIGkuZmFzLmZhLWNoZWNrLWNpcmNsZS5jb2xvcjEKICAgICAgICAgICAgc3BhbiAjW2IgQW1wbGlhciBmdW5jaW9uYWxpZGFkZXM6XSB1bmEgdmV6IGltcGxlbWVudGFkbyBlbCBzaXN0ZW1hIGLDoXNpY28sIHNlIHB1ZWRlbiBhZ3JlZ2FyIG51ZXZhcyBmdW5jaW9uYWxpZGFkZXMsIGNvbW8gbcOhcyBzZW5zb3JlcyBvIGNhcGFjaWRhZGVzIGRlIGFuw6FsaXNpcyBwcmVkaWN0aXZvLCBwYXJhIG9idGVuZXIgbWF5b3IgY29udHJvbCB5IHByZWNpc2nDs24gZW4gZWwgbW9uaXRvcmVvLgoKICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlcgogICAgICAuY29sLWxnLTEyCiAgICAgICAgLnRpdHVsby1zZXh0by5jb2xvci1hY2VudG8tY29udGVuaWRvCiAgICAgICAgICBoNSBGaWd1cmEgNi4gCiAgICAgICAgICBzcGFuIFJlc3VtZW4gaW1wbGVtZW50YWNpw7NuIHByw6FjdGljYSBkZSB1biBzaXN0ZW1hIGLDoXNpY28gSW9UCgogICAgICAgIC5iZ2ZpZy5wLTQubWItMQogICAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvODIuc3ZnJyBhbHQ9J0xhIEZpZ3VyYSA2IHNlIGRlbm9taW5hIMKrUmVzdW1lbiBpbXBsZW1lbnRhY2nDs24gcHLDoWN0aWNhIGRlIHVuIHNpc3RlbWEgYsOhc2ljbyBJb1TCuy4gUHJlc2VudGEgdW4gbWFwYSBjb25jZXB0dWFsIHF1ZSBzZSBkaXZpZGUgZW4gY2luY28gc2VjY2lvbmVzIHByaW5jaXBhbGVzOiB1bmEgaW50cm9kdWNjacOzbiBxdWUgZXhwbGljYSBlbCBwcm9ww7NzaXRvIHkgbGEgaW1wb3J0YW5jaWEgZGUgZmFtaWxpYXJpemFyc2UgY29uIGxvcyBjb21wb25lbnRlcyBJb1QsIGVsIGRpc2XDsW8geSBjb25maWd1cmFjacOzbiBkZWwgc2lzdGVtYSAoaW5jbHV5ZW5kbyBtb25pdG9yZW8gZGUgdmFyaWFibGVzIHkgY29uZWN0aXZpZGFkKSwgbG9zIGRldGFsbGVzIGRlIGltcGxlbWVudGFjacOzbiBwYXNvIGEgcGFzbyAoZGVzZGUgbGEgc2VsZWNjacOzbiBkZSBzZW5zb3JlcyBoYXN0YSBsYSBjb25maWd1cmFjacOzbiBkZSBhbGVydGFzKSwgbGEgYmFzZSBwcsOhY3RpY2EgcGFyYSBwcm95ZWN0b3MgbcOhcyBjb21wbGVqb3MsIHkgbGFzIGNvbmNsdXNpb25lcyB5IHJlY29tZW5kYWNpb25lcyBwYXJhIGZ1dHVyYXMgaW1wbGVtZW50YWNpb25lcy4gJykgIAoKICAgICAgICBmaWdjYXB0aW9uIEZ1ZW50ZTogT0lULCAyMDI0LiAKCgoKICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tdC01CiAgICAgIC5jb2wtbGctNC5teS0zLmoxCiAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvNzUucG5nJyBhbHQ9JycpCiAgICAgIC5jb2wtbGctOC5teS0zCgogICAgICAgIHAgTGEgaW1wbGVtZW50YWNpw7NuIGRlIHVuIHNpc3RlbWEgSW9UIGLDoXNpY28gcHJvcG9yY2lvbmEgdW5hIGV4cGVyaWVuY2lhIHByw6FjdGljYSBxdWUgcGVybWl0ZSBjb21wcmVuZGVyIGxvcyBjb21wb25lbnRlcyBmdW5kYW1lbnRhbGVzIGRlIElvVCB5IHN1IGFwbGljYWNpw7NuIGVuIGVsIG1vbml0b3JlbyBkZSB2YXJpYWJsZXMgYW1iaWVudGFsZXMuIEEgdHJhdsOpcyBkZSBsYSBjb25maWd1cmFjacOzbiBkZSBzZW5zb3JlcywgbGEgcHJvZ3JhbWFjacOzbiBkZWwgbWljcm9jb250cm9sYWRvciB5IGxhIHZpc3VhbGl6YWNpw7NuIGRlIGRhdG9zIGVuIGxhIG51YmUsIGxvcyB1c3VhcmlvcyBhcHJlbmRlbiBhIGNvbnN0cnVpciB1biBzaXN0ZW1hIGRlIG1vbml0b3JlbyByZW1vdG8gZW4gdGllbXBvIHJlYWwuCgogICAgICAgIHAgU2UgcmVjb21pZW5kYW4gbG9zIHNpZ3VpZW50ZXMgcmVjdXJzb3MgZGUgYWNjZXNvIGxpYnJlIHBhcmEgY29tcGxlbWVudGFyOgogICAgICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlciAgICAgICAgCiAgICAgICAgICAuY29sLWxnLTYubXktMwogICAgICAgICAgICBhLmFuZXhvLm1iLTMoaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1NTGFQcDlnSmZZWSIgdGFyZ2V0PSJfYmxhbmsiKQogICAgICAgICAgICAgIC5hbmV4b19faWNvbm8KICAgICAgICAgICAgICAgIGltZyhzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWFzL2ljb25vLWxpbmsuc3ZnIikKICAgICAgICAgICAgICAuYW5leG9fX3RleHRvCiAgICAgICAgICAgICAgICBwICNbYiBFbmxhY2Ugd2ViLl0gVmlkZW8g4oCcR2V0dGluZyBTdGFydGVkIHdpdGggRVNQMzLigJ0gCiAgICAgICAgICAgIGEuYW5leG8ubWItMyhocmVmPSJodHRwczovL3dva3dpLmNvbS8iIHRhcmdldD0iX2JsYW5rIikKICAgICAgICAgICAgICAuYW5leG9fX2ljb25vCiAgICAgICAgICAgICAgICBpbWcoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hcy9pY29uby1saW5rLnN2ZyIpCiAgICAgICAgICAgICAgLmFuZXhvX190ZXh0bwogICAgICAgICAgICAgICAgcCAjW2IgRW5sYWNlIHdlYi5dIFNpbXVsYWRvciBlbiBsw61uZWEg4oCcV29rd2kgSW9UIFNpbXVsYXRvcuKAnSAgICAKCiAgICAgICAgICAuY29sLWxnLTYubXktMwogICAgICAgICAgICBhLmFuZXhvLm1iLTMoaHJlZj0iaHR0cHM6Ly93d3cuZGlnaWtleS5jb20vcG93ZXItc2F2aW5nLXRlY2huaXF1ZXMtaW90IiB0YXJnZXQ9Il9ibGFuayIpCiAgICAgICAgICAgICAgLmFuZXhvX19pY29ubwogICAgICAgICAgICAgICAgaW1nKHNyYz0iQC9hc3NldHMvY3Vyc28vdGVtYXMvaWNvbm8tbGluay5zdmciKQogICAgICAgICAgICAgIC5hbmV4b19fdGV4dG8KICAgICAgICAgICAgICAgIHAgI1tiIEVubGFjZSB3ZWIuXSBBcnTDrWN1bG8gdMOpY25pY28gIlBvd2VyIFNhdmluZyBUZWNobmlxdWVzIGZvciBJb1QgRGV2aWNlcyIgICAgICAgICAgICAgICAgICAgICAgICAK"},null]}