{"remainingRequest":"/home/runner/work/CF5_232100/CF5_232100/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF5_232100/CF5_232100/src/views/Glosario.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF5_232100/CF5_232100/src/views/Glosario.vue","mtime":1734306896330},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF5_232100/CF5_232100/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBwbGFudGlsbGFNaXhpbnMgZnJvbSAnQC9qcy9wbGFudGlsbGFNaXhpbnMnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnR2xvc2FyaW8nLAogIG1peGluczogW3BsYW50aWxsYU1peGluc10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdsb3NhcmlvRGF0YTogWwogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdBY3R1YWRvcicsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0Rpc3Bvc2l0aXZvIHF1ZSByZWNpYmUgc2XDsWFsZXMgZGUgY29udHJvbCB5IHJlYWxpemEgdW5hIGFjY2nDs24gZsOtc2ljYSwgY29tbyBhYnJpciB1bmEgdsOhbHZ1bGEgbyBhY3RpdmFyIHVuIG1vdG9yLCBlbiBmdW5jacOzbiBkZSBsb3MgZGF0b3MgcmVjaWJpZG9zIGRlIHVuIHNpc3RlbWEgSW9UJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdBV1MgSW9UJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnUGxhdGFmb3JtYSBkZSBBbWF6b24gV2ViIFNlcnZpY2VzIHBhcmEgZ2VzdGlvbmFyIHkgYW5hbGl6YXIgZGlzcG9zaXRpdm9zIElvVCBhIGVzY2FsYSBpbmR1c3RyaWFsLCBjb24gY2FwYWNpZGFkZXMgYXZhbnphZGFzIGRlIG1hY2hpbmUgbGVhcm5pbmcgZSBpbnRlbGlnZW5jaWEgYXJ0aWZpY2lhbC4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0JpZyBEYXRhJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnQ29uanVudG8gZGUgZGF0b3MgbWFzaXZvcyBnZW5lcmFkb3MgcG9yIGRpc3Bvc2l0aXZvcyBJb1QsIHF1ZSByZXF1aWVyZW4gcHJvY2VzYW1pZW50byBhdmFuemFkbyB5IGFuw6FsaXNpcyBwYXJhIGV4dHJhZXIgaW5mb3JtYWNpw7NuIHZhbGlvc2EuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdDYWxpYnJhY2nDs24gZGUgU2Vuc29yZXMnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdQcm9jZXNvIGRlIGFqdXN0ZSBkZSBsb3Mgc2Vuc29yZXMgcGFyYSBxdWUgc3VzIG1lZGljaW9uZXMgc2VhbiBwcmVjaXNhcyB5IGNvbmZpYWJsZXMsIGNydWNpYWwgZW4gc2lzdGVtYXMgSW9UIHBhcmEgZ2FyYW50aXphciBsYSBjYWxpZGFkIGRlIGxvcyBkYXRvcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0VmaWNpZW5jaWEgRW5lcmfDqXRpY2EnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdPcHRpbWl6YWNpw7NuIGRlbCBjb25zdW1vIGRlIGVuZXJnw61hIGVuIGRpc3Bvc2l0aXZvcyBJb1QsIGZ1bmRhbWVudGFsIHBhcmEgZXh0ZW5kZXIgbGEgdmlkYSDDunRpbCBkZSBkaXNwb3NpdGl2b3MgYWxpbWVudGFkb3MgcG9yIGJhdGVyw61hIGVuIGVudG9ybm9zIHJlbW90b3MuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdHZW1lbG9zIERpZ2l0YWxlcycsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1JlcHJlc2VudGFjacOzbiBkaWdpdGFsIGRlIHVuIGRpc3Bvc2l0aXZvIG8gc2lzdGVtYSBmw61zaWNvLCBxdWUgcGVybWl0ZSBzaW11bGFyIHN1IGNvbXBvcnRhbWllbnRvIGVuIHRpZW1wbyByZWFsLCBmYWNpbGl0YW5kbyBlbCBtb25pdG9yZW8geSBhbsOhbGlzaXMgc2luIGludGVyZmVyaXIgZW4gZWwgc2lzdGVtYSByZWFsLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnSW50ZWxpZ2VuY2lhIEFydGlmaWNpYWwgKElBKScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1TDqWNuaWNhIHF1ZSB1dGlsaXphIGRhdG9zIElvVCBwYXJhIGFudGljaXBhciBmYWxsb3MgZW4gZXF1aXBvcywgcGVybWl0aWVuZG8gcmVhbGl6YXIgbWFudGVuaW1pZW50byBhbnRlcyBkZSBxdWUgb2N1cnJhIHVuYSBhdmVyw61hLCBtZWpvcmFuZG8gbGEgZWZpY2llbmNpYSBvcGVyYXRpdmEnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ0ludGVybmV0IGRlIGxhcyBDb3NhcyAoSW9UKScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0Nvbmp1bnRvIGRlIGRpc3Bvc2l0aXZvcyBmw61zaWNvcyBjb25lY3RhZG9zIGEgSW50ZXJuZXQsIHF1ZSByZWNvcGlsYW4sIGNvbXBhcnRlbiB5IGFuYWxpemFuIGRhdG9zIHBhcmEgYXV0b21hdGl6YXIgcHJvY2Vzb3MgeSBmYWNpbGl0YXIgbGEgdG9tYSBkZSBkZWNpc2lvbmVzIGVuIHRpZW1wbyByZWFsLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnTG9SYVdBTicsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1Byb3RvY29sbyBkZSBjb211bmljYWNpw7NuIGRlIGxhcmdvIGFsY2FuY2UgeSBiYWpvIGNvbnN1bW8gZGUgZW5lcmfDrWEsIGlkZWFsIHBhcmEgY29uZWN0YXIgZGlzcG9zaXRpdm9zIElvVCBlbiDDoXJlYXMgZXh0ZW5zYXMsIGNvbW8gY2FtcG9zIGFncsOtY29sYXMuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdNYW50ZW5pbWllbnRvIFByZWRpY3Rpdm8nLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdUaXBvIGRlIHJlZCBlbiBsYSBjdWFsIGNhZGEgZGlzcG9zaXRpdm8gSW9UIHNlIGNvbmVjdGEgY29uIG90cm9zIGRpc3Bvc2l0aXZvcyBjZXJjYW5vcywgYW1wbGlhbmRvIGxhIGNvYmVydHVyYSB5IGF1bWVudGFuZG8gbGEgZmlhYmlsaWRhZCBkZSBsYSBjb211bmljYWNpw7NuLCB0w61waWNvIGVuIFppZ0JlZS4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ01pY3JvY29udHJvbGFkb3IgKE1DVSknLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdDaXJjdWl0byBpbnRlZ3JhZG8gcXVlIGZ1bmNpb25hIGNvbW8gZWwgY2VyZWJybyBkZSB1biBzaXN0ZW1hIElvVCwgcHJvY2VzYW5kbyBsb3MgZGF0b3MgZGUgbG9zIHNlbnNvcmVzIHkgdHJhbnNtaXRpw6luZG9sb3MgYSBwbGF0YWZvcm1hcyBlbiBsYSBudWJlLiBFamVtcGxvczogRVNQMzIsIEVTUDgyNjYuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdNUVRUJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnUHJvdG9jb2xvIGxpZ2VybyBkZSBtZW5zYWplcsOtYSBxdWUgZmFjaWxpdGEgbGEgY29tdW5pY2FjacOzbiBlbnRyZSBkaXNwb3NpdGl2b3MgSW9UIHkgcGxhdGFmb3JtYXMgZW4gbGEgbnViZSBtZWRpYW50ZSB1biBtb2RlbG8gZGUgcHVibGljYWNpw7NuL3N1c2NyaXBjacOzbi4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ1BsYXRhZm9ybWEgZW4gbGEgTnViZScsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0VudG9ybm8gZGlnaXRhbCBlbiBsw61uZWEgZG9uZGUgc2UgYWxtYWNlbmFuLCBwcm9jZXNhbiB5IHZpc3VhbGl6YW4gbG9zIGRhdG9zIGRlIGxvcyBkaXNwb3NpdGl2b3MgSW9ULCBwZXJtaXRpZW5kbyBlbCBhY2Nlc28geSBnZXN0acOzbiByZW1vdGEgZGVsIHNpc3RlbWEuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdQcm90b2NvbG8gZGUgQ29tdW5pY2FjacOzbicsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0Nvbmp1bnRvIGRlIHJlZ2xhcyBxdWUgcGVybWl0ZW4gbGEgdHJhbnNtaXNpw7NuIGRlIGRhdG9zIGVudHJlIGRpc3Bvc2l0aXZvcyBJb1QgeSBwbGF0YWZvcm1hcyBlbiBsYSBudWJlLCBhc2VndXJhbmRvIHVuYSBjb211bmljYWNpw7NuIGVmZWN0aXZhIHkgc2VndXJhLicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnU2Vuc29yJywKICAgICAgICAgIHNpZ25pZmljYWRvOgogICAgICAgICAgICAnRGlzcG9zaXRpdm8gcXVlIGRldGVjdGEgeSBtaWRlIHZhcmlhYmxlcyBmw61zaWNhcyBjb21vIHRlbXBlcmF0dXJhLCBodW1lZGFkLCBwcmVzacOzbiwgeSBsYXMgY29udmllcnRlIGVuIGRhdG9zIGRpZ2l0YWxlcyBwYXJhIHN1IHByb2Nlc2FtaWVudG8geSBhbsOhbGlzaXMgZW4gc2lzdGVtYXMgSW9ULicsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXJtaW5vOiAnU2ltdWxhZG9yIElvVCcsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ0hlcnJhbWllbnRhIHZpcnR1YWwgcGFyYSBwcm9iYXIgeSBjb25maWd1cmFyIHNpc3RlbWFzIElvVCBzaW4gbmVjZXNpZGFkIGRlIDxpPkhhcmR3YXJlPC9pPiBmw61zaWNvLCDDunRpbCBwYXJhIHZlcmlmaWNhciBjb25maWd1cmFjaW9uZXMgeSBwcm9ncmFtYWNpw7NuIGRlIHNlbnNvcmVzIHkgYWN0dWFkb3Jlcy4nLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGVybWlubzogJ1RoaW5nU3BlYWsnLAogICAgICAgICAgc2lnbmlmaWNhZG86CiAgICAgICAgICAgICdQbGF0YWZvcm1hIGVuIGxhIG51YmUgcG9wdWxhciBwYXJhIHByb3llY3RvcyBJb1QgcGVxdWXDsW9zLCBxdWUgcGVybWl0ZSBhbG1hY2VuYXIgeSB2aXN1YWxpemFyIGRhdG9zIGRlIHNlbnNvcmVzIGVuIHRpZW1wbyByZWFsLCB5IGNvbmZpZ3VyYXIgYWxlcnRhcyBhdXRvbcOhdGljYXMuJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRlcm1pbm86ICdWaXN1YWxpemFjacOzbiBkZSBEYXRvcycsCiAgICAgICAgICBzaWduaWZpY2FkbzoKICAgICAgICAgICAgJ1ByZXNlbnRhY2nDs24gZ3LDoWZpY2EgZGUgbG9zIGRhdG9zIGRlIElvVCBlbiB0aWVtcG8gcmVhbCwgZmFjaWxpdGFuZG8gZWwgYW7DoWxpc2lzIHkgbGEgdG9tYSBkZSBkZWNpc2lvbmVzLCBjb23Dum4gZW4gcGxhdGFmb3JtYXMgY29tbyBUaGluZ1NwZWFrIHkgR29vZ2xlIENsb3VkIElvVC4nLAogICAgICAgIH0sCiAgICAgIF0sCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgb3JkZXJlZERhdGEoKSB7CiAgICAgIGNvbnN0IG5ld0dsb3NhcmlvRGF0YSA9IFsuLi50aGlzLmdsb3NhcmlvRGF0YV0KICAgICAgbmV3R2xvc2FyaW9EYXRhLmZvckVhY2goZWxlbWVudCA9PiB7CiAgICAgICAgZWxlbWVudC5zaWduaWZpY2FkbyA9CiAgICAgICAgICBlbGVtZW50LnNpZ25pZmljYWRvLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsKICAgICAgICAgIGVsZW1lbnQuc2lnbmlmaWNhZG8uc2xpY2UoMSkKICAgICAgfSkKCiAgICAgIGNvbnN0IHNvcnRlZERhdGEgPSBbLi4ubmV3R2xvc2FyaW9EYXRhXS5yZWR1Y2UoKHIsIGUpID0+IHsKICAgICAgICBjb25zdCBsZXRyYSA9IHRoaXMucXVpdGFyQWNlbnRvcyhlLnRlcm1pbm8udG9Mb3dlckNhc2UoKSlbMF0KICAgICAgICBpZiAoIXJbbGV0cmFdKSByW2xldHJhXSA9IHsgbGV0cmEsIHRlcm1pbm9zOiBbZV0gfQogICAgICAgIGVsc2UgcltsZXRyYV0udGVybWlub3MucHVzaChlKQogICAgICAgIHJldHVybiByCiAgICAgIH0sIHt9KQoKICAgICAgY29uc3Qgc29sb0xldHJhcyA9IE9iamVjdC5rZXlzKHNvcnRlZERhdGEpLnNvcnQoKQogICAgICBjb25zdCBuZXdTb3J0ZWREYXRhID0gW10KCiAgICAgIHNvbG9MZXRyYXMuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICBjb25zdCBsZXRyYU9iaiA9IHNvcnRlZERhdGFbZWxlbWVudF0KICAgICAgICBsZXQgdGVybWlub3MgPSBsZXRyYU9iai50ZXJtaW5vcwoKICAgICAgICBpZiAodGVybWlub3MubGVuZ3RoID4gMSkgewogICAgICAgICAgY29uc3QgdGVybWlub3NPcmRlbmFkb3MgPSBbXQogICAgICAgICAgY29uc3Qgc29sb1Rlcm1pbm9zID0gbGV0cmFPYmoudGVybWlub3MKICAgICAgICAgICAgLm1hcCh0ZXJtT2JqID0+IHRlcm1PYmoudGVybWlubykKICAgICAgICAgICAgLnNvcnQoKGEsIGIpID0+IHsKICAgICAgICAgICAgICBjb25zdCBhbiA9IHRoaXMucXVpdGFyQWNlbnRvcyhhKS50b0xvd2VyQ2FzZSgpCiAgICAgICAgICAgICAgY29uc3QgYm4gPSB0aGlzLnF1aXRhckFjZW50b3MoYikudG9Mb3dlckNhc2UoKQogICAgICAgICAgICAgIGlmIChhbiA8IGJuKSByZXR1cm4gLTEKICAgICAgICAgICAgICBpZiAoYm4gPCBhbikgcmV0dXJuIDEKICAgICAgICAgICAgICByZXR1cm4gMAogICAgICAgICAgICB9KQogICAgICAgICAgc29sb1Rlcm1pbm9zLmZvckVhY2godGVybSA9PiB7CiAgICAgICAgICAgIHRlcm1pbm9zT3JkZW5hZG9zLnB1c2goCiAgICAgICAgICAgICAgdGVybWlub3MuZmluZCh0ZXJtaW5vID0+IHRlcm1pbm8udGVybWlubyA9PT0gdGVybSksCiAgICAgICAgICAgICkKICAgICAgICAgIH0pCiAgICAgICAgICB0ZXJtaW5vcyA9IHRlcm1pbm9zT3JkZW5hZG9zCiAgICAgICAgfQogICAgICAgIG5ld1NvcnRlZERhdGEucHVzaCh7CiAgICAgICAgICBsZXRyYTogbGV0cmFPYmoubGV0cmEudG9VcHBlckNhc2UoKSwKICAgICAgICAgIHRlcm1pbm9zOiB0ZXJtaW5vcywKICAgICAgICB9KQogICAgICB9KQogICAgICByZXR1cm4gbmV3U29ydGVkRGF0YQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["Glosario.vue"],"names":[],"mappings":";AAkfile":"Glosario.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n.curso-main-container.glosario\n  BannerInterno(icono=\"fas fa-atlas\" titulo=\"Glosario\")\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .glosario__letra-item.mb-2(v-for=\"letra in orderedData\" :key=\"'letra-'+letra.letra\")\n      .glosario__letra-item__letra.me-4\n        .glosario__letra-item__letra__icono\n          span {{letra.letra}}\n      .glosario__letra-item__texto\n        p.mb-3(v-for=\"termino in letra.terminos\")\n          strong\n            i.lista-ul__vineta\n          strong(v-html=\"termino.terminoHtml || termino.termino\") \n          strong : \n          span(v-html=\"termino.significado\")\n</template>\n\n<script>\nimport plantillaMixins from '@/js/plantillaMixins'\nexport default {\n  name: 'Glosario',\n  mixins: [plantillaMixins],\n  data() {\n    return {\n      glosarioData: [\n        {\n          termino: 'Actuador',\n          significado:\n            'Dispositivo que recibe señales de control y realiza una acción física, como abrir una válvula o activar un motor, en función de los datos recibidos de un sistema IoT',\n        },\n        {\n          termino: 'AWS IoT',\n          significado:\n            'Plataforma de Amazon Web Services para gestionar y analizar dispositivos IoT a escala industrial, con capacidades avanzadas de machine learning e inteligencia artificial.',\n        },\n        {\n          termino: 'Big Data',\n          significado:\n            'Conjunto de datos masivos generados por dispositivos IoT, que requieren procesamiento avanzado y análisis para extraer información valiosa.',\n        },\n        {\n          termino: 'Calibración de Sensores',\n          significado:\n            'Proceso de ajuste de los sensores para que sus mediciones sean precisas y confiables, crucial en sistemas IoT para garantizar la calidad de los datos.',\n        },\n        {\n          termino: 'Eficiencia Energética',\n          significado:\n            'Optimización del consumo de energía en dispositivos IoT, fundamental para extender la vida útil de dispositivos alimentados por batería en entornos remotos.',\n        },\n        {\n          termino: 'Gemelos Digitales',\n          significado:\n            'Representación digital de un dispositivo o sistema físico, que permite simular su comportamiento en tiempo real, facilitando el monitoreo y análisis sin interferir en el sistema real.',\n        },\n        {\n          termino: 'Inteligencia Artificial (IA)',\n          significado:\n            'Técnica que utiliza datos IoT para anticipar fallos en equipos, permitiendo realizar mantenimiento antes de que ocurra una avería, mejorando la eficiencia operativa',\n        },\n        {\n          termino: 'Internet de las Cosas (IoT)',\n          significado:\n            'Conjunto de dispositivos físicos conectados a Internet, que recopilan, comparten y analizan datos para automatizar procesos y facilitar la toma de decisiones en tiempo real.',\n        },\n        {\n          termino: 'LoRaWAN',\n          significado:\n            'Protocolo de comunicación de largo alcance y bajo consumo de energía, ideal para conectar dispositivos IoT en áreas extensas, como campos agrícolas.',\n        },\n        {\n          termino: 'Mantenimiento Predictivo',\n          significado:\n            'Tipo de red en la cual cada dispositivo IoT se conecta con otros dispositivos cercanos, ampliando la cobertura y aumentando la fiabilidad de la comunicación, típico en ZigBee.',\n        },\n        {\n          termino: 'Microcontrolador (MCU)',\n          significado:\n            'Circuito integrado que funciona como el cerebro de un sistema IoT, procesando los datos de los sensores y transmitiéndolos a plataformas en la nube. Ejemplos: ESP32, ESP8266.',\n        },\n        {\n          termino: 'MQTT',\n          significado:\n            'Protocolo ligero de mensajería que facilita la comunicación entre dispositivos IoT y plataformas en la nube mediante un modelo de publicación/suscripción.',\n        },\n        {\n          termino: 'Plataforma en la Nube',\n          significado:\n            'Entorno digital en línea donde se almacenan, procesan y visualizan los datos de los dispositivos IoT, permitiendo el acceso y gestión remota del sistema.',\n        },\n        {\n          termino: 'Protocolo de Comunicación',\n          significado:\n            'Conjunto de reglas que permiten la transmisión de datos entre dispositivos IoT y plataformas en la nube, asegurando una comunicación efectiva y segura.',\n        },\n        {\n          termino: 'Sensor',\n          significado:\n            'Dispositivo que detecta y mide variables físicas como temperatura, humedad, presión, y las convierte en datos digitales para su procesamiento y análisis en sistemas IoT.',\n        },\n        {\n          termino: 'Simulador IoT',\n          significado:\n            'Herramienta virtual para probar y configurar sistemas IoT sin necesidad de <i>Hardware</i> físico, útil para verificar configuraciones y programación de sensores y actuadores.',\n        },\n        {\n          termino: 'ThingSpeak',\n          significado:\n            'Plataforma en la nube popular para proyectos IoT pequeños, que permite almacenar y visualizar datos de sensores en tiempo real, y configurar alertas automáticas.',\n        },\n        {\n          termino: 'Visualización de Datos',\n          significado:\n            'Presentación gráfica de los datos de IoT en tiempo real, facilitando el análisis y la toma de decisiones, común en plataformas como ThingSpeak y Google Cloud IoT.',\n        },\n      ],\n    }\n  },\n  computed: {\n    orderedData() {\n      const newGlosarioData = [...this.glosarioData]\n      newGlosarioData.forEach(element => {\n        element.significado =\n          element.significado.charAt(0).toLowerCase() +\n          element.significado.slice(1)\n      })\n\n      const sortedData = [...newGlosarioData].reduce((r, e) => {\n        const letra = this.quitarAcentos(e.termino.toLowerCase())[0]\n        if (!r[letra]) r[letra] = { letra, terminos: [e] }\n        else r[letra].terminos.push(e)\n        return r\n      }, {})\n\n      const soloLetras = Object.keys(sortedData).sort()\n      const newSortedData = []\n\n      soloLetras.forEach(element => {\n        const letraObj = sortedData[element]\n        let terminos = letraObj.terminos\n\n        if (terminos.length > 1) {\n          const terminosOrdenados = []\n          const soloTerminos = letraObj.terminos\n            .map(termObj => termObj.termino)\n            .sort((a, b) => {\n              const an = this.quitarAcentos(a).toLowerCase()\n              const bn = this.quitarAcentos(b).toLowerCase()\n              if (an < bn) return -1\n              if (bn < an) return 1\n              return 0\n            })\n          soloTerminos.forEach(term => {\n            terminosOrdenados.push(\n              terminos.find(termino => termino.termino === term),\n            )\n          })\n          terminos = terminosOrdenados\n        }\n        newSortedData.push({\n          letra: letraObj.letra.toUpperCase(),\n          terminos: terminos,\n        })\n      })\n      return newSortedData\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.glosario\n  &__letra-item\n    display: flex\n    &__texto\n      padding-top: 5px\n    &__letra\n      &__icono\n        width: 32px\n        height: 32px\n        position: relative\n        line-height: 1em\n        border-radius: 50%\n        background-color: $color-sistema-d\n\n        span\n          position: absolute\n          left: 50%\n          top: 50%\n          transform: translate(-50%,-50%)\n          font-size: 1.1em\n          font-weight: $base-black-font-weight\n</style>\n"]}]}